import telebot
from telebot import types
import requests

bot = telebot.TeleBot("8429683137:AAEhGBEH0AAIAxkCojS3aNDbfqMcGwmdHpA")
API = "9d25c51fa1e0dfe91110828f36f71afb"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é


def main_menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("ü§ù–ü–æ–º–æ—â—å‚úåÔ∏è", callback_data="help")
    btn2 = types.InlineKeyboardButton("üìù–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìå", callback_data="info")
    btn3 = types.InlineKeyboardButton(
        "ü•≥–ü–æ—Å–º–µ–π—Å—è –Ω–µ–º–Ω–æ–≥–æü§£", callback_data="jok")
    btn4 = types.InlineKeyboardButton("‚õÖ–ü–æ–≥–æ–¥–∞üåßÔ∏è", callback_data="weather")
    btn5 = types.InlineKeyboardButton("‚ùå–£–¥–∞–ª–∏—Ç—åüóëÔ∏è", callback_data="delete")
    markup.add(btn1, btn2, btn3, btn4, btn5)
    return markup


# keyboard for help
def my_help():  #
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(
        "üòç–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–πüòç", callback_data="How_used"
    )
    btn2 = types.InlineKeyboardButton(
        "‚ù§Ô∏è–ß—Ç–æ —è –º–æ–≥—É‚ù§Ô∏è", callback_data="ability")
    btn3 = types.InlineKeyboardButton(
        "üò≠–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—Éüò¢", callback_data="trouble"
    )
    btn4 = types.InlineKeyboardButton("‚¨ÖÔ∏è üòè–ù–∞–∑–∞–¥üòè", callback_data="back")
    markup.add(btn1, btn2, btn3, btn4)
    return markup


# keyboard for info
def info():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(
        "O –ø—Ä–æ–µ–∫—Ç–µ", callback_data="about_project")
    btn2 = types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")
    btn_back = types.InlineKeyboardButton(
        "Ô∏è‚¨ÖÔ∏è–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_main")
    markup.add(btn1, btn2, btn_back)
    return markup


simple_responses = {
    ("–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∫—É", "—Ö–∞–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å"): "–ü—Ä–∏–≤–µ—Ç! {name} –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üëã",
    ("–∫–∞–∫ –¥–µ–ª–∞", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è", "—á—Ç–æ –Ω–æ–≤–æ–≥–æ"): "–û—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è –∫–∞–∫? üòä",
    ("—á—Ç–æ –¥–µ–ª–∞–µ—à—å", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è"): "–£—á—É—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Telebot –∏ —Ä–∞–∑–≤–∏–≤–∞—é —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏! üíª",
    ("–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—É–≤–∏–¥–∏–º—Å—è"): "–ü–æ–∫–∞, {name}! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üëã",
    ("—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "thank you"): "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä",
    ("–ø–æ–≥–æ–¥–∞", "–∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞", "–ø–æ–∫–∞–∂–∏ –ø–æ–≥–æ–¥—É"): "–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É! üå§",
    ("—à—É—Ç–∫–∞", "—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É", "–ø–æ—à—É—Ç–∏"): "ü§£ –í–æ—Ç —à—É—Ç–∫–∞ –¥–ª—è —Ç–µ–±—è: ‚Ä¶",
    ("–∫—Ç–æ —Ç—ã", "—á—Ç–æ —Ç—ã", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ"): "–Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å! ü§ñ",
    ("–ø–æ–º–æ—â—å", "help", "–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è"): "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, –∏ —è –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! üìù",
    ("—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏", "good night", "–Ω–æ—á—å"): "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, {name}! üåô",
    ("–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "good morning", "—É—Ç—Ä–æ"): "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {name}! ‚òÄÔ∏è",
    ("–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"): "–ù–∞–¥–µ—é—Å—å, —É —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòÑ",
    ("–≥–¥–µ —Ç—ã", "—Ç—ã –≥–¥–µ"): "–Ø –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! ü§ñ",
    ("–ø–æ–º–æ–≥–∏", "–ø–æ–¥—Å–∫–∞–∂–∏"): "–ö–æ–Ω–µ—á–Ω–æ, {name}! –° —á–µ–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å? üìù",
    ("—á—Ç–æ –Ω–æ–≤–æ–≥–æ", "–Ω–æ–≤–æ—Å—Ç–∏"): "–í—Å–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ, {name}. –ê —É —Ç–µ–±—è –∫–∞–∫? üì∞",
    ("—Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è", "happy birthday"): "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ –ñ–µ–ª–∞—é —Å—á–∞—Å—Ç—å—è –∏ —É—Å–ø–µ—Ö–∞!",
    ("–ª—é–±–æ–≤—å", "–ª—é–±–∏—à—å"): "–Ø –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! üíñ",
    ("—Ç—ã —É–º–µ–µ—à—å —à—É—Ç–∏—Ç—å", "–ø–æ—à—É—Ç–∏ –µ—â—ë"): "–ö–æ–Ω–µ—á–Ω–æ! üòÑ –í–æ—Ç –µ—â—ë —à—É—Ç–∫–∞: ‚Ä¶",
    ("–∫–∞–∫ –ø–æ–≥–æ–¥–∞", "–ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è", "—Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞"): "–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –∏ —è –ø–æ–∫–∞–∂—É —Ç–æ—á–Ω—É—é –ø–æ–≥–æ–¥—É! üå¶",
    ("–∫–∞–∫–æ–µ –≤—Ä–µ–º—è", "–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å", "—Å–µ–π—á–∞—Å –≤—Ä–µ–º—è"): "–°–µ–π—á–∞—Å —è –Ω–µ –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–æ —É —Ç–µ–±—è –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —á–∞—Å—ã ‚è∞",
    ("–ø—Ä–∞–∑–¥–Ω–∏–∫–∏", "–∫–∞–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏", "—Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫"): "–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫ –æ—Å–æ–±–µ–Ω–Ω—ã–π? üéâ",
    ("—Å—á–∞—Å—Ç—å–µ", "—Ä–∞–¥–æ—Å—Ç—å"): "–ñ–µ–ª–∞—é —Ç–µ–±–µ —Å—á–∞—Å—Ç—å—è –∏ —Ä–∞–¥–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üåà",
    ("–≥—Ä—É—Å—Ç—å", "–ø–µ—á–∞–ª—å", "–ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"): "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, {name}, –≤—Å—ë —Å—Ç–∞–Ω–µ—Ç –ª—É—á—à–µ! üåü",
    ("—É–ª—ã–±–Ω–∏—Å—å", "—É–ª—ã–±–∫–∞"): "üòÑ –£–ª—ã–±–∫–∞ –¥–µ–ª–∞–µ—Ç –¥–µ–Ω—å —è—Ä—á–µ!",
    ("–º–Ω–µ —Å–∫—É—á–Ω–æ", "—Å–∫—É—á–Ω–æ"): "–î–∞–≤–∞–π —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ —à—É—Ç–∫—É –∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—é! ü§ó",
    ("—Ç—ã —É–º–Ω—ã–π", "—Ç—ã —É–º–Ω–∞—è", "—Ç—ã —É–º–µ–µ—à—å"): "–°–ø–∞—Å–∏–±–æ! –Ø —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è —Ç–µ–±—è! ü§ñ",
    ("–∏–≥—Ä—ã", "–ø–æ–∏–≥—Ä–∞–µ–º", "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ"): "–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —à—É—Ç–∫–∏, –∏—Å—Ç–æ—Ä–∏–∏ –∏–ª–∏ –¥–∞–≤–∞—Ç—å —Ñ–∞–∫—Ç—ã! üé≤",
    ("–º—É–∑—ã–∫–∞", "–ø–µ—Å–Ω—è", "–ø–æ—Å–æ–≤–µ—Ç—É–π –ø–µ—Å–Ω—é"): "–Ø –ª—é–±–ª—é —Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É –≤ –¥—É—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞! üéµ",
    ("—Ñ–∏–ª—å–º", "–ø–æ—Å–æ–≤–µ—Ç—É–π —Ñ–∏–ª—å–º", "–∫–∏–Ω–æ"): "–ú–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–ª—å–º—ã! üé¨",
    ("–µ–¥–∞", "—á—Ç–æ –ø–æ–µ—Å—Ç—å", "—Ä–µ—Ü–µ–ø—Ç"): "–•–æ—á–µ—à—å —è –¥–∞–º –ø—Ä–æ—Å—Ç–æ–π —Ä–µ—Ü–µ–ø—Ç? üç≤",
    ("—Å–ø–æ—Ä—Ç", "—Ñ–∏—Ç–Ω–µ—Å", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"): "–î–≤–∏–≥–∞–π—Å—è –±–æ–ª—å—à–µ ‚Äî —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è! üí™",
    ("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", "–∫—É–¥–∞ –ø–æ–µ—Ö–∞—Ç—å", "–æ—Ç–¥—ã—Ö"): "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è ‚Äî —ç—Ç–æ –∑–¥–æ—Ä–æ–≤–æ! üåç",
    ("—É—á—ë–±–∞", "—à–∫–æ–ª–∞", "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç"): "–£—á–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω–æ, {name}, –∑–Ω–∞–Ω–∏—è –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤—Å–µ–≥–¥–∞! üìö",
    ("—Ä–∞–±–æ—Ç–∞", "—á–µ–º —Ä–∞–±–æ—Ç–∞–µ—à—å", "–∫–∞—Ä—å–µ—Ä–∞"): "–í–∞–∂–Ω–∞ —Ö–æ—Ä–æ—à–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–¥—ã—Ö! üßë‚Äçüíª",
    ("–¥–µ–Ω—å–≥–∏", "—Ñ–∏–Ω–∞–Ω—Å—ã", "–∑–∞—Ä–ø–ª–∞—Ç–∞"): "–î–µ–Ω—å–≥–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∫ —Ç–µ–º, –∫—Ç–æ —É–º–µ–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å! üí∞",
    ("–∑–¥–æ—Ä–æ–≤—å–µ", "–±–æ–ª–µ—é", "—Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ"): "–ë–µ—Ä–µ–≥–∏ —Å–µ–±—è –∏ –±—É–¥—å –∑–¥–æ—Ä–æ–≤! ‚ù§Ô∏è",
    ("–ø–ª–∞–Ω—ã", "—Ü–µ–ª–∏", "–º–µ—á—Ç—ã"): "–°—Ç–∞–≤—å —Ü–µ–ª–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞–π –∏—Ö! üöÄ",
    ("—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–Ω–æ–≤–∏–Ω–∫–∏", "–≥–∞–¥–∂–µ—Ç—ã"): "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ! ü§ñ",
    ("–ª—é–±–ª—é", "–æ–±–æ–∂–∞—é", "–Ω—Ä–∞–≤–∏—Ç—Å—è"): "–õ—é–±–æ–≤—å –¥–µ–ª–∞–µ—Ç –∂–∏–∑–Ω—å —è—Ä—á–µ! üíñ",
    ("–Ω–µ–Ω–∞–≤–∏–∂—É", "–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è", "—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç"): "–ù–µ –¥–µ—Ä–∂–∏ –Ω–µ–≥–∞—Ç–∏–≤ –≤–Ω—É—Ç—Ä–∏, {name}, –ª—É—á—à–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞ —á—Ç–æ-—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ–µ! üåü",
    ("–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∫—É", "—Ö–∞–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å"): "–ü—Ä–∏–≤–µ—Ç! {name} –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üëã",
    ("–∫–∞–∫ –¥–µ–ª–∞", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è", "—á—Ç–æ –Ω–æ–≤–æ–≥–æ"): "–û—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è –∫–∞–∫? üòä",
    ("—á—Ç–æ –¥–µ–ª–∞–µ—à—å", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è"): "–£—á—É—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Telebot –∏ —Ä–∞–∑–≤–∏–≤–∞—é —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏! üíª",
    ("–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—É–≤–∏–¥–∏–º—Å—è"): "–ü–æ–∫–∞, {name}! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üëã",
    ("—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "thank you"): "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä",
    ("–ø–æ–≥–æ–¥–∞", "–∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞", "–ø–æ–∫–∞–∂–∏ –ø–æ–≥–æ–¥—É"): "–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É! üå§",
    ("—à—É—Ç–∫–∞", "—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É", "–ø–æ—à—É—Ç–∏"): "ü§£ –í–æ—Ç —à—É—Ç–∫–∞ –¥–ª—è —Ç–µ–±—è: ‚Ä¶",
    ("–∫—Ç–æ —Ç—ã", "—á—Ç–æ —Ç—ã", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ"): "–Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å! ü§ñ",
    ("–ø–æ–º–æ—â—å", "help", "–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è"): "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, –∏ —è –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! üìù",
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —Ñ—Ä–∞–∑:
    ("—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏", "good night", "–Ω–æ—á—å"): "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, {name}! üåô",
    ("–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "good morning", "—É—Ç—Ä–æ"): "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {name}! ‚òÄÔ∏è",
    ("–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"): "–ù–∞–¥–µ—é—Å—å, —É —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòÑ",
    ("–≥–¥–µ —Ç—ã", "—Ç—ã –≥–¥–µ"): "–Ø –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! ü§ñ",
    ("–ø–æ–º–æ–≥–∏", "–ø–æ–¥—Å–∫–∞–∂–∏"): "–ö–æ–Ω–µ—á–Ω–æ, {name}! –° —á–µ–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å? üìù",
    ("—á—Ç–æ –Ω–æ–≤–æ–≥–æ", "–Ω–æ–≤–æ—Å—Ç–∏"): "–í—Å–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ, {name}. –ê —É —Ç–µ–±—è –∫–∞–∫? üì∞",
    ("—Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è", "happy birthday"): "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ –ñ–µ–ª–∞—é —Å—á–∞—Å—Ç—å—è –∏ —É—Å–ø–µ—Ö–∞!",
    ("–ª—é–±–æ–≤—å", "–ª—é–±–∏—à—å"): "–Ø –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ! üíñ",
    ("—Ç—ã —É–º–µ–µ—à—å —à—É—Ç–∏—Ç—å", "–ø–æ—à—É—Ç–∏ –µ—â—ë"): "–ö–æ–Ω–µ—á–Ω–æ! üòÑ –í–æ—Ç –µ—â—ë —à—É—Ç–∫–∞: ‚Ä¶"

}


responses = {
    "How_used": "–ß—Ç–æ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏  ",
    "trouble": "–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –¥–∞–≤–∞–π –µ–µ —Ä–µ—à–∞—Ç—å",
    "ability": "–ú–º–º –º–æ–≥—É –º–Ω–æ–≥–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å",
    "about_project": "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–¥—Ä–µ–π, —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç...",
    "contacts": "–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ –¢–ì https://t.me/Andre26ree",
    "jok": "ü§£ –í–æ—Ç —à—É—Ç–∫–∞!",
}
menus = {"main": main_menu, "help": my_help, "info": info}


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–µ–±—è –º–æ–π –¥–æ—Ä–æ–≥–æ–π ‚ù§Ô∏è", reply_markup=main_menu()
    )


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == "weather":
        bot.send_message(call.message.chat.id, "üåç –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
        bot.register_next_step_handler(call.message, send_weather)
    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ
    if call.data in responses:
        bot.send_message(call.message.chat.id, responses[call.data])

    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–µ–Ω—é
    elif call.data in menus:
        bot.send_message(
            call.message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–∏ –∫–Ω–æ–ø–∫—Éüëá", reply_markup=menus[call.data]()
        )
    elif call.data == "back" or call.data == "back_main":
        bot.send_message(
            call.message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu()
        )
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
    except:
        pass


def get_weather_emoji(description):
    description = description.lower()
    if "—è—Å–Ω–æ" in description:
        return "‚òÄÔ∏è"
    elif "–æ–±–ª–∞—á–Ω–æ" in description:
        return "‚òÅÔ∏è"
    elif "–ø–∞—Å–º—É—Ä–Ω–æ" in description:
        return "‚òÅÔ∏è"
    elif "–¥–æ–∂–¥—å" in description:
        return "üåß"
    elif "–≥—Ä–æ–∑–∞" in description:
        return "‚õà"
    elif "c–Ω–µ–≥" in description:
        return "‚ùÑÔ∏è"
    elif "—Ç—É–º–∞–Ω" in description:
        return "üå´"
    else:
        return "üåç"


def send_weather(message):
    city = message.text.lower().strip()
    try:
        res = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric&lang=ru"
        )
        if res.status_code == 200:
            data = res.json()

            temp = data["main"]["temp"]
            feels_like = data["main"]["feels_like"]
            humidity = data["main"]["humidity"]
            pressure = round(data["main"]["pressure"] * 0.75006375541921)
            wind = data["wind"]["speed"]
            description = data["weather"][0]["description"]
            bot.send_message(
                message.chat.id,
                f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city.title()}:\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                f"üîΩ –î–∞–≤–ª–µ–Ω–∏–µ:{pressure}–º–º —Ä—Ç. —Å—Ç.\n"
                f"üí® –í–µ—Ç–µ—Ä:{wind} m/c\n"
                f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ:{description.capitalize()}",
            )
        else:
            bot.send_message(
                message.chat.id, "‚ö†Ô∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
            bot.register_next_step_handler(message, send_weather)
    except:
        bot.send_message(
            message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
        )


# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ —Å–æ–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=["text"])
def reply(message):
    name = message.from_user.first_name
    text = message.text.lower().strip()

    for keys, response in simple_responses.items():
        if text in keys:
            bot.reply_to(message, response.format(name=name))
            return

    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É
    try:
        res = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={text}&appid={API}&units=metric&lang=ru"
        )
        if res.status_code == 200:
            data = res.json()
            city_name = data["name"]
            temp = data["main"]["temp"]
            desc = data["weather"][0]["description"]
            bot.reply_to(message, f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city_name}: {temp}¬∞C, {desc}")
            return
    except:
        pass

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ
    bot.reply_to(message, f"–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, {name} üòÖ")


bot.polling(none_stop=True)
