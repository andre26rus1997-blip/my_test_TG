import  telebot
from telebot import types
bot = telebot.TeleBot("8300321950:AAGARJW5aN-9R4q0zA9B5JeLlbeL-pT0cd8")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("ü§ù–ü–æ–º–æ—â—å‚úåÔ∏è",callback_data="help")
    btn2 = types.InlineKeyboardButton("üìù–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìå",callback_data="info")
    btn3 = types.InlineKeyboardButton("ü•≥–ü–æ—Å–º–µ–π—Å—è –Ω–µ–º–Ω–æ–≥–æü§£",callback_data="jok")
    btn4 = types.InlineKeyboardButton("‚õÖ–ü–æ–≥–æ–¥–∞üåßÔ∏è",callback_data="weather")
    btn5 = types.InlineKeyboardButton("‚ùå–£–¥–∞–ª–∏—Ç—åüóëÔ∏è",callback_data="delete")
    markup.add(btn1,btn2,btn3,btn4,btn5)
    return markup

# keyboard for help
def my_help():         #
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("üòç–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–πüòç",callback_data="How_used")
    btn2 = types.InlineKeyboardButton("‚ù§Ô∏è–ß—Ç–æ —è –º–æ–≥—É‚ù§Ô∏è",callback_data="ability")
    btn3 = types.InlineKeyboardButton("üò≠–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—Éüò¢",callback_data="trouble")
    btn4 = types.InlineKeyboardButton("‚¨ÖÔ∏è üòè–ù–∞–∑–∞–¥üòè",callback_data="back")
    markup.add(btn1,btn2,btn3,btn4)
    return markup
# keyboard for info
def info():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("O –ø—Ä–æ–µ–∫—Ç–µ",callback_data="about_project")
    btn2 = types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã",callback_data="contacts")
    btn_back = types.InlineKeyboardButton("Ô∏è‚¨ÖÔ∏è–ù–∞–∑–∞–¥‚¨ÖÔ∏è",callback_data="back_main")
    markup.add(btn1,btn2,btn_back)
    return markup

responses = {
    "How_used":"–ß—Ç–æ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏  ",
    "trouble":"–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –¥–∞–≤–∞–π –µ–µ —Ä–µ—à–∞—Ç—å",
    "ability":"–ú–º–º –º–æ–≥—É –º–Ω–æ–≥–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å",
}



@bot.message_handler(commands=["start"])
def start(message):


    try:
        bot.delete_message(message.chat.id,message.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ /start:{e}")

    bot.send_message(message.chat.id,"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–µ–±—è –º–æ–π –¥–æ—Ä–æ–≥–æ–π",reply_markup=main_menu())

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):

    if call.data in responses:
        bot.send_message(call.message.chat.id,responses[call.data])



    elif call.data == "help":

        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id, "–≠—Ç–æ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è ", reply_markup=my_help())
    elif call.data =="info":

        bot.send_message(call.message.chat.id,"üìå –≠—Ç–æ —Ä–∞–∑–¥–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ:",reply_markup=info())
        bot.delete_message(call.message.chat.id,call.message.message_id)
    elif call.data =="about_project":
        bot.send_message(call.message.chat.id,"–ü—Ä–∏–≤–µ—Ç –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–¥—Ä–µ–π —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π "
                                              "–ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç —ç—Ç–æ—Ç –ø–æ—Ç –ø–æ–π –ø–µ—Ä–≤—ã–π –ø–µ–¥ –ø—Ä–æ—ç–∫—Ç , –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–∫–ª—é–∞—Ç—å –ø–æ –º–∫—Å–∏–º—É–º—É —Ñ—É–Ω–∫—Ü–∏–π , –ø–æ –∫–æ—Ç–æ—Ä—ã–º —è "
                                              "–±—É–¥—É —É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—é –∏ TeleBot. üõ† ")
    elif call.data =="contacts":
        bot.send_message(call.message.chat.id,"–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ –¢–ì https://t.me/Andre26ree")

    elif call.data =="info":
        bot.send_message(call.message.chat.id,"–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ info")
    elif call.data =="jok":
        bot.send_message(call.message.chat.id,"This is jok")
    elif call.data =="weather":
        bot.send_message(call.message.chat.id,"—ç—Ç–∞ –ø–æ–≥–æ–¥–∞ ")

    elif call.data == "back_main":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id,"ü•≥–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–Ω–æ–≤–∞ —Ç—É—Ç ü•≥",reply_markup=main_menu())

    elif call.data =="back":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id,"üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=main_menu())


@bot.message_handler(content_types=["text"])
def reply(message):
    name = message.from_user.first_name
    text = message.text.lower()
    if text in["–ø—Ä–∏–≤–µ—Ç","–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ","–∫—É","—Ö–∞–π","–ö–∞–∫ —Ç—ã"]:
        bot.reply_to(message,f"–ü—Ä–∏–≤–µ—Ç! {name} –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!")
    elif text in ["–∫–∞–∫ –¥–µ–ª–∞","—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è","—á—Ç–æ –∫–∞–∫ —Ç—ã","–∫—É"]:
        bot.reply_to(message,"–û—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è?")
    elif text == "—á—Ç–æ –¥–µ–ª–∞–µ—à—å?":
        bot.reply_to(message,"–£—á—É—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Telebot!")
    else:
        bot.reply_to(message,f"–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª  {name} üòÖ")



bot.polling(none_stop=True)