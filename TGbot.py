import telebot
from telebot import types
import requests

bot = telebot.TeleBot("8300321950:AAGARJW5aN-9R4q0zA9B5JeLlbeL-pT0cd8")
API = "9d25c51fa1e0dfe91110828f36f71afb"
bot.remove_webhook()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("ü§ù–ü–æ–º–æ—â—å‚úåÔ∏è", callback_data="help")
    btn2 = types.InlineKeyboardButton("üìù–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìå", callback_data="info")
    btn3 = types.InlineKeyboardButton("ü•≥–ü–æ—Å–º–µ–π—Å—è –Ω–µ–º–Ω–æ–≥–æü§£", callback_data="jok")
    btn4 = types.InlineKeyboardButton("‚õÖ–ü–æ–≥–æ–¥–∞üåßÔ∏è", callback_data="weather")
    btn5 = types.InlineKeyboardButton("‚ùå–£–¥–∞–ª–∏—Ç—åüóëÔ∏è", callback_data="delete")
    markup.add(btn1, btn2, btn3, btn4, btn5)
    return markup


# keyboard for help
def my_help():  #
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(
        "üòç–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–πüòç", callback_data="How_used"
    )
    btn2 = types.InlineKeyboardButton("‚ù§Ô∏è–ß—Ç–æ —è –º–æ–≥—É‚ù§Ô∏è", callback_data="ability")
    btn3 = types.InlineKeyboardButton(
        "üò≠–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—Éüò¢", callback_data="trouble"
    )
    btn4 = types.InlineKeyboardButton("‚¨ÖÔ∏è üòè–ù–∞–∑–∞–¥üòè", callback_data="back")
    markup.add(btn1, btn2, btn3, btn4)
    return markup


# keyboard for info
def info():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("O –ø—Ä–æ–µ–∫—Ç–µ", callback_data="about_project")
    btn2 = types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")
    btn_back = types.InlineKeyboardButton("Ô∏è‚¨ÖÔ∏è–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_main")
    markup.add(btn1, btn2, btn_back)
    return markup


responses = {
    "How_used": "–ß—Ç–æ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏  ",
    "trouble": "–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –¥–∞–≤–∞–π –µ–µ —Ä–µ—à–∞—Ç—å",
    "ability": "–ú–º–º –º–æ–≥—É –º–Ω–æ–≥–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å",
    "about_project": "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–¥—Ä–µ–π, —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç...",
    "contacts": "–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ –¢–ì https://t.me/Andre26ree",
    "jok": "ü§£ –í–æ—Ç —à—É—Ç–∫–∞!",
}
menus = {"main": main_menu, "help": my_help, "info": info}


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–µ–±—è –º–æ–π –¥–æ—Ä–æ–≥–æ–π ‚ù§Ô∏è", reply_markup=main_menu()
    )


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == "weather":
        bot.send_message(call.message.chat.id, "üåç –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
        bot.register_next_step_handler(call.message, send_weather)
    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ
    if call.data in responses:
        bot.send_message(call.message.chat.id, responses[call.data])

    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–µ–Ω—é
    elif call.data in menus:
        bot.send_message(
            call.message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–∏ –∫–Ω–æ–ø–∫—Éüëá", reply_markup=menus[call.data]()
        )
    elif call.data == "back" or call.data == "back_main":
        bot.send_message(
            call.message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu()
        )
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
    except:
        pass


def get_weather_emoji(description):
    description = description.lower()
    if "—è—Å–Ω–æ" in description:
        return "‚òÄÔ∏è"
    elif "–æ–±–ª–∞—á–Ω–æ" in description:
        return "‚òÅÔ∏è"
    elif "–ø–∞—Å–º—É—Ä–Ω–æ" in description:
        return "‚òÅÔ∏è"
    elif "–¥–æ–∂–¥—å" in description:
        return "üåß"
    elif "–≥—Ä–æ–∑–∞" in description:
        return "‚õà"
    elif "c–Ω–µ–≥" in description:
        return "‚ùÑÔ∏è"
    elif "—Ç—É–º–∞–Ω" in description:
        return "üå´"
    else:
        return "üåç"


def send_weather(message):
    city = message.text.lower().strip()
    try:
        res = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric&lang=ru"
        )
        if res.status_code == 200:
            data = res.json()

            temp = data["main"]["temp"]
            feels_like = data["main"]["feels_like"]
            humidity = data["main"]["humidity"]
            pressure = round(data["main"]["pressure"] * 0.75006375541921)
            wind = data["wind"]["speed"]
            description = data["weather"][0]["description"]
            bot.send_message(
                message.chat.id,
                f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city.title()}:\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                f"üîΩ –î–∞–≤–ª–µ–Ω–∏–µ:{pressure}–º–º —Ä—Ç. —Å—Ç.\n"
                f"üí® –í–µ—Ç–µ—Ä:{wind} m/c\n"
                f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ:{description.capitalize()}",
            )
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
            bot.register_next_step_handler(message, send_weather)
    except:
        bot.send_message(
            message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
        )


# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ —Å–æ–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=["text"])
def reply(message):
    name = message.from_user.first_name
    text = message.text.lower().strip()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    if text in ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–∫—É", "—Ö–∞–π", "–ö–∞–∫ —Ç—ã"]:
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç! {name} –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!")
        return
    elif text in ["–∫–∞–∫ –¥–µ–ª–∞", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è", "—á—Ç–æ –∫–∞–∫ —Ç—ã", "–∫—É"]:
        bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è?")
        return
    elif text == "—á—Ç–æ –¥–µ–ª–∞–µ—à—å?":
        bot.reply_to(message, "–£—á—É—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Telebot!")
        return

        # 2. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É
    try:
        res = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={text}&appid={API}&units=metric&lang=ru"
        )
        if res.status_code == 200:
            data = res.json()

            city_name = data["name"]
            temp = data["main"]["temp"]
            desc = data["weather"][0]["description"]
            bot.reply_to(message, f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city_name}: {temp}¬∞C, {desc}")
            return
    except:
        pass

    # 3. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ
    bot.reply_to(message, f"–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, {name} üòÖ")


bot.polling(none_stop=True)
